{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-hello-world/app-hello-world.component.css","webpack:///./src/app/app-hello-world/app-hello-world.component.html","webpack:///./src/app/app-hello-world/app-hello-world.component.ts","webpack:///./src/app/app-index/app-index.component.css","webpack:///./src/app/app-index/app-index.component.html","webpack:///./src/app/app-index/app-index.component.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1 {\\r\\n  color: #369;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 250%;\\r\\n}\"","module.exports = \"<p>\\n  {{message}}\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hello-world',\n  templateUrl: './app-hello-world.component.html',\n  styleUrls: ['./app-hello-world.component.css']\n})\nexport class AppHelloWorldComponent implements OnInit {\n message = 'Hello Angular World!';\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"profileForm\\\"  (ngSubmit)=\\\"onSubmit()\\\">\\n  \\n\\t  <label>\\n\\t    First Name:\\n\\t    <input type=\\\"text\\\" formControlName=\\\"username\\\">\\n\\t  </label>\\n\\t<br/>\\n\\t  <label>\\n\\t    Last Name:\\n\\t    <input type=\\\"text\\\" formControlName=\\\"password\\\">\\n\\t  </label>\\n\\n\\t\\t<div>\\n\\t\\t\\t<button type=\\\"submit\\\" name=\\\"submit\\\">Login</button> \\n\\t\\t</div>\\n</form>\\n\\n\"","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component} from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { finalize, tap, catchError } from 'rxjs/operators';\n\n\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './app-index.component.html',\n  styleUrls: ['./app-index.component.css'],\n  providers: [ HttpClient ]\n})\n  \n@Injectable()\nexport class AppIndexComponent {\n\n  constructor(public http: HttpClient) { }\n\n  profileForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl('')\n  });\n\nhttpOptions;\n  onSubmit() {\n    \n     this.httpOptions = {\n  headers: new HttpHeaders({  'Content-Type': 'application/x-www-form-urlencoded',\n                'Access-Control-Allow-Credentials': 'false',\n                'Access-Control-Allow-Headers': 'Content-MD5, X-Alt-Referer',\n                'authorization' : \"Basic \"  + this.profileForm.value.username + \":\"+ this.profileForm.value.password })\n  };\n\n  this.http.get( 'http://localhost:9080/sppi-web-presentation-layer-0.0.1-SNAPSHOT/authentication',this.httpOptions).subscribe((res)=>{\n        console.log(res);\n    });\n    \n    /*.pipe(\n     catchError(this.handleError)\n  );*/\n    \n      console.info(this.profileForm.value);\n console.info(this.profileForm.value.username);\n    \n  }\n  \n  private handleError(error: HttpErrorResponse) {\n      console.info('An error occurred:', error);\n  \n  if (error.error instanceof ErrorEvent) {\n    // A client-side or network error occurred. Handle it accordingly.\n    console.info('An error occurred:', error.error.message);\n  } else {\n    // The backend returned an unsuccessful response code.\n    // The response body may contain clues as to what went wrong,\n    console.info(\n      `Backend returned code ${error.status}, ` +\n      `body was: ${error.error}`);\n  }\n  // return an observable with a user-facing error message\n  return throwError(\n    'Something bad happened; please try again later.');\n};\n\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n         <app-index></app-index>\n      `,\n})\nexport class AppComponent {\n }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppHelloWorldComponent } from './app-hello-world/app-hello-world.component';\nimport { AppIndexComponent } from './app-index/app-index.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppHelloWorldComponent,\n    AppIndexComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}